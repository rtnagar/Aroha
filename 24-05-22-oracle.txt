CREATE OR REPLACE PROCEDURE SP_INSTORE IS
    CURSOR CUR_INSTORE  IS SELECT * FROM INSTORE_CUST;
    CURSOR CUR_WEB IS SELECT * FROM WEB_CUST;
    CURSOR CUR_CALL IS SELECT * FROM CALL_CENTER_CUST;
    V_COUNT INT;
BEGIN
    FOR I IN CUR_INSTORE LOOP
        SELECT COUNT(*) INTO V_COUNT
        FROM TARGET_TBBLE_CUST
        WHERE CUST_NAME = I.CUST_NAME
        AND CITY = I.CITY;
        
        IF V_COUNT = 0 THEN
            IF I.STORE_NAME IS NULL THEN
                INSERT INTO REJECT_RECORD_TABLE VALUES(SEQ_REJ.NEXTVAL,'STORE','STORE NAME IS NOT MENTIONED');
            ELSE
                INSERT INTO TARGET_TBBLE_CUST(CUST_ID, SRC_CUST_ID, CUST_NAME, CITY, SOURCE) VALUES(SEQ_CUST.NEXTVAL, I.CUST_ID, I.CUST_NAME, I.CITY,'INSTORE');
            END IF;
        END IF;
    END LOOP;
    
    FOR I IN CUR_CALL LOOP
        SELECT COUNT(*) INTO V_COUNT
        FROM TARGET_TBBLE_CUST
        WHERE CUST_NAME = I.CUST_NAME
        AND CITY = I.CITY;
        
        IF V_COUNT = 0 THEN
            IF I.PHONE IS NULL OR I.REP_NAME IS NULL THEN
                INSERT INTO REJECT_RECORD_TABLE VALUES(SEQ_REJ.NEXTVAL,'CALL CENTER','PHONE NUMBER OR REP_NAME IS NULL');
            ELSE
                INSERT INTO TARGET_TBBLE_CUST(CUST_ID, SRC_CUST_ID, CUST_NAME, CITY, PHONE, REP_NAME, SOURCE) VALUES(SEQ_CUST.NEXTVAL, I.CUST_ID, I.CUST_NAME, I.CITY,I.PHONE, I.REP_NAME,'CALL CENTER');
            END IF;
        END IF;
    END LOOP;
    FOR I IN CUR_WEB LOOP
        SELECT COUNT(*) INTO V_COUNT
        FROM TARGET_TBBLE_CUST
        WHERE CUST_NAME = I.CUST_NAME
        AND CITY = I.CUST_CITY;
        
        IF V_COUNT = 0 THEN
            IF I.EMAIL IS NULL OR (I.EMAIL NOT LIKE '%@%') OR I.STATUS = 'Bounced' THEN
                INSERT INTO REJECT_RECORD_TABLE VALUES(SEQ_REJ.NEXTVAL,'WEB CUSTOMER','EMAIL ID IS NULL OR NOT VALID EMAILID OR STATUS IS BOUNCED');
            ELSE
                INSERT INTO TARGET_TBBLE_CUST(CUST_ID, SRC_CUST_ID, CUST_NAME, CITY,EMAIL, SOURCE) VALUES(SEQ_CUST.NEXTVAL, I.CUST_ID, I.CUST_NAME, I.CUST_CITY,I.EMAIL,'WEB CUSTOMER');
            END IF;
        END IF;
    END LOOP;
END;       
/

EXEC SP_INSTORE;

SELECT * FROM INSTORE_CUST; 
SELECT * FROM WEB_CUST;
SELECT * FROM CALL_CENTER_CUST;
DESC TARGET_TBBLE_CUST;
SELECT * FROM TARGET_TBBLE_CUST;
SELECT * FROM REJECT_RECORD_TABLE;

TRUNCATE TABLE TARGET_TBBLE_CUST;
TRUNCATE TABLE REJECT_RECORD_TABLE;

CREATE SEQUENCE SEQ_REJ;
CREATE SEQUENCE SEQ_CUST;



CREATE TABLE INSTORE_CUST ( CUST_ID NUMBER,
                            CUST_NAME VARCHAR2(200),
                            CITY VARCHAR(200),
                            STORE_NAME VARCHAR2(200)
                            );

INSERT INTO INSTORE_CUST VALUES(1,'Tom','bangalore','slv store');
INSERT INTO INSTORE_CUST VALUES(2,'TIm','Chennai','Rudra Store');
INSERT INTO INSTORE_CUST VALUES(3,'John','Delhi','Duli Store');
INSERT INTO INSTORE_CUST VALUES(4,'Deepa','bangalore','Sapan Store');
INSERT INTO INSTORE_CUST VALUES(5,'BALA','Chennai','Rudra store');
INSERT INTO INSTORE_CUST VALUES(6,'RINKU','bangalore','Sapan store');
COMMIT;

CREATE TABLE WEB_CUST ( CUST_ID NUMBER,
                        CUST_NAME VARCHAR2(200),
                        CUST_CITY VARCHAR2(200),
                        EMAIL VARCHAR2(200),
                        STATUS VARCHAR2(200)
                        );

INSERT INTO WEB_CUST VALUES(100,'RAM','bangalore','ram@gmail.com','Y');
INSERT INTO WEB_CUST VALUES(101,'Hari','Hydrabad','Hari@gmail.com','N');
INSERT INTO WEB_CUST VALUES(102,'Rohan','bangalore','rohan@gmail.com','Bounced');
INSERT INTO WEB_CUST VALUES(103,'JEEVAN','Chennai','jeevan@gmail.com','Y');
COMMIT;
                        
CREATE TABLE CALL_CENTER_CUST ( CUST_ID NUMBER,
                                CUST_NAME VARCHAR2(200),
                                CITY VARCHAR2(200),
                                REP_NAME VARCHAR2(200),
                                PHONE NUMBER(10)
                                );
INSERT INTO CALL_CENTER_CUST VALUES(1,'Tom','bangalore','RAM', 89982398);
INSERT INTO CALL_CENTER_CUST VALUES(2,'TIm','Chennai','RAMU', 89923898);
INSERT INTO CALL_CENTER_CUST VALUES(3,'LILLY','bangalore','RAJA', 89429898);
INSERT INTO CALL_CENTER_CUST VALUES(4,'SOBHA','Delhi','DEEPA', 89239898);
COMMIT;


CREATE TABLE TARGET_TBBLE_CUST( CUST_ID NUMBER,
                               SRC_CUST_ID NUMBER,
                               CUST_NAME VARCHAR2(200),
                               CITY VARCHAR2(200),
                               EMAIL VARCHAR2(200),
                               PHONE NUMBER(10),
                               REP_NAME VARCHAR2(200),
                               SOURCE VARCHAR2(200)
                               );
                               

CREATE TABLE REJECT_RECORD_TABLE( REJ_ID NUMBER,
                                    SRC_REC VARCHAR(200),
                                    REASON VARCHAR(200)
                                );

/




-- PSEUDO COLUMNS
-- ROWID
select p_name, ROWID
FROM PRODUCT1;

--

SELECT *
FROM STUDENT
WHERE ROWID = (SELECT MAX(ROWID) FROM STUDENT);

--
-- DISPLAYING UNIQUE RECORDS
SELECT STD_NAME, STD_COURSE, MIN(ROWID)
FROM STUDENT
GROUP BY std_name,std_course;

SELECT STD_ID, MIN(ROWID)
FROM STUDENT
GROUP BY STD_ID;



--- DISPLAYING THE NUMBER OF DUPLICATE RECORDS

SELECT STD_NAME, STD_COURSE, COUNT(*)
FROM STUDENT
GROUP BY STD_NAME, STD_COURSE
HAVING COUNT(*) > 1;

------
--- LEVEL

SELECT LEVEL
FROM DUAL
CONNECT BY LEVEL < 10;


SELECT SUBSTR('SUBHASH',LEVEL,1)
FROM DUAL
CONNECT BY LEVEL < LENGTH('SUBHASH')+1;

-- DISPLAYING THE MONTHS IN A YEAR

SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE,'YYYY'),LEVEL-1),'MONTH')
FROM DUAL
CONNECT BY LEVEL <= 12;



SELECT TO_CHAR(TO_DATE(SYSDATE,'DD-MM-YY')+(LEVEL-1),'DAY'), TO_CHAR(TO_DATE(SYSDATE,'DD-MM-YY')+(LEVEL-1),'DD')
FROM DUAL
CONNECT BY LEVEL <= 30;

SELECT TO_CHAR(TO_DATE(TRUNC(SYSDATE,'MM'),'DD-MM-YY')+(LEVEL-1),'DAY') "DAYS IN MONTH" , TO_CHAR(TO_DATE(TRUNC(SYSDATE,'MM'),'DD-MM-YY')+(LEVEL-1),'DD-MM-YY') "DATES"
FROM DUAL
CONNECT BY LEVEL <= TO_CHAR(LAST_DAY(SYSDATE),'DD');

SELECT SYSDATE, TO_CHAR(LAST_DAY(SYSDATE),'DD') "LAST DAY"
FROM DUAL;

-- DISPLAY DATES FROM FIRST DAY OF YEAR TILL LAST DAY OF YEAR

SELECT TO_CHAR(TRUNC(SYSDATE,'YYYY')+(LEVEL-1))
FROM DUAL
CONNECT BY LEVEL <=365;

SELECT TO_CHAR(TRUNC('12-09-2011','YYYY')+(LEVEL-1))
FROM DUAL
CONNECT BY LEVEL <=365;

SELECT LAST_DAY(SYSDATE) FROM DUAL;

SELECT LAST_DAY(TO_CHAR(SYSDATE,'DD-MM-YYYY')) FROM DUAL;

SELECT LAST_DAY(SYSDATE) FROM DUAL;



